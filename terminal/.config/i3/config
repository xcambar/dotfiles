#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# Windows key
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 13

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:sans-serif 11

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesnâ€™t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $mod+d exec --no-startup-id rofi -show drun

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# split in horizontal orientation
bindsym $mod+Shift+b split h

# split in vertical orientation
bindsym $mod+Shift+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1  1
set $ws2  2
set $ws3  3
set $ws4  4
set $ws5  5
set $ws6  6
set $ws7  7
set $ws8  8
set $ws9  9
set $ws10 10

# Assign to primary output
workspace $ws1  output primary
workspace $ws2  output primary
workspace $ws3  output primary
workspace $ws4  output primary
workspace $ws5  output primary
workspace $ws6  output primary
workspace $ws7  output primary
workspace $ws8  output eDP1
workspace $ws9  output eDP1
workspace $ws10 output primary

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# open next unused workspace
bindsym $mod+n exec --no-startup-id ~/.config/i3/next_empty_workspace.py && rofi -show drun

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod+Shift+n exec --no-startup-id ~/.config/i3/move_to_next_empty_workspace.py

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

mode "layout" {
  # change focus
  bindsym h focus left
  bindsym j focus down
  bindsym k focus up
  bindsym l focus right

  # move focused window
  bindsym $mod+Shift+h move left
  bindsym $mod+Shift+j move down
  bindsym $mod+Shift+k move up
  bindsym $mod+Shift+l move right

  # These bindings trigger as soon as you enter the resize mode
  bindsym $mod+h resize shrink width 10 px or 10 ppt
  bindsym $mod+j resize grow height 10 px or 10 ppt
  bindsym $mod+k resize shrink height 10 px or 10 ppt
  bindsym $mod+l resize grow width 10 px or 10 ppt

  # layout toggle
  bindsym m layout toggle stacking tabbed splith splitv

  # toggle tiling / floating
  bindsym d floating toggle

  # back to normal: Enter or Escape or $mod+o
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym $mod+r mode "default"
}
bindsym $mod+r mode "layout"

mode "dual monitor" {
  bindsym h move container to output left
  bindsym j move container to output down
  bindsym k move container to output up
  bindsym l move container to output right

  # back to normal: Enter or Escape or $mod+r
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym $mod+m mode "default"
}
bindsym $mod+m mode "dual monitor"

hide_edge_borders smart

# Polybar
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# Custom app placements
assign [class="^Slack"] $ws8
assign [class="^Google-chrome"] $ws9
for_window [class="^Spotify"] move container to workspace $ws7

# Configure gaps
for_window [class=".*"] border pixel 0
gaps inner 4
smart_gaps on

# dex is used to autostart DesktopEntry files
exec dex -ae i3
